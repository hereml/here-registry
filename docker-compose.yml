version: '3.8'
services:
  # ONLY NEEDED IF YOU CHOOSE TO HOST YOUR OWN DATABASE
  db:
    container_name: postgres_db_container
    image: postgres:15.3
    networks:
      - wineml-network
    environment:
      - POSTGRES_DB=wineml
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
  db:
    container_name: mysql_db_container
    image: mysql:8.0.33
    networks:
      - wineml-network
    environment:
      - MYSQL_DATABASE=wineml
      - MYSQL_ROOT_PASSWORD=root-password
    volumes:
      - mysql_db_data:/var/lib/mysql

  wineml_registry_service:
    container_name: wineml_registry_service_container
    build:
      context: ./wineml_registry/service
      # GCP
      dockerfile: ./docker/gcp/Dockerfile
      # AWS
      dockerfile: ./docker/aws/Dockerfile
      # AZURE
      dockerfile: ./docker/azure/Dockerfile
    image: wineml_registry_service_image
    networks:
      - wineml-network
    depends_on:
      - db
    environment:
    ############################################################################
    # BACKEND STORE CONFIGURATION
    ############################################################################
      # GCP GCS EXAMPLE
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - GCP_GCS_BUCKET_NAME=${GCP_GCS_BUCKET_NAME}
      # AWS S3 EXAMPLE
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      # AZURE BLOB EXAMPLE
      - AZURE_ACCOUNT_NAME=${AZURE_ACCOUNT_NAME}
      - AZURE_CONTAINER_NAME=${AZURE_CONTAINER_NAME}
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
    ############################################################################
    # DATABASE CONFIGURATION
    ############################################################################
      # CONNECT EXTERNAL POSTGRES
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=wineml
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # CONNECT INTERNAL POSTGRES IN DOCKER-COMPOSE
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=wineml
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      # CONNECT EXTERNAL MYSQL
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=wineml
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      # CONNECT INTERNAL MYSQL IN DOCKER-COMPOSE
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=wineml
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root-password


  wineml_registry_ui:
    container_name: wineml_registry_ui_container
    build:
      context: ./wineml_registry/ui
    image: wineml_registry_ui_image
    networks:
      - wineml-network
    ports:
      - 3000:3000
    depends_on:
      - wineml_registry_service
    environment:
      - REACT_APP_WINEML_SERVICE_URL=http://wineml_registry_service:8081

networks:
  wineml-network:
